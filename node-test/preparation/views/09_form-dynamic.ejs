<!DOCTYPE html>
<html lang="en">
<head>
    <meta charset="UTF-8">
    <meta name="viewport" content="width=device-width, initial-scale=1.0">
    <title>동적 폼 전송</title>
    <script
        src="https://code.jquery.com/jquery-3.7.1.min.js"
        integrity="sha256-/JqT3SQfawRcv/BIHPThkBvs0OEvtFFmqPF/lYI/Cxo="
        crossorigin="anonymous">
    </script>
    <script src="https://cdn.jsdelivr.net/npm/axios/dist/axios.min.js"></script>
</head>
<body>
    <form name="register">
        <input type="text" name="id" placeholder="ID" title="소문자, 숫자를 이용하여 5글자 이상" pattern="^[a-z0-9]{5,}" required value="eunseo527" />
        <br />
        <input type="password" name="pw" placeholder="password" value="0527" />
        <br />
        <input type="text" name="name" placeholder="이름" required value="손주연" />

        <!-- <input type="submit" /> -->
        <!-- <button type="submit">제출</button> -->

        <div>
            <!-- <button type="button" onclick="ajaxGet()">ajax get 전송</button>
            <br />
            <button type="button" onclick="ajaxPost()">ajax post 전송</button>
            <br /> -->
            <!-- <button type="button" onclick="axiosGet()">axios get 전송</button>
            <br />
            <button type="button" onclick="axiosPost()">axios post 전송</button>
            <br /> -->
            <button type="button" onclick="fetchGet()">fetch get 전송</button>
            <br />
            <button type="button" onclick="fetchPost()">fetch post 전송</button>
        </div>
        
    </form>
    <h3 id="result"></h3>

    <script>
        function getData() {
            const form = document.forms["register"];

            if (!form.checkValidity()) { // checkValidity 폼의 유효성 검사를 해서 boolean 값 반환
                form.reportValidity(); // reportValidity 유효성 검사를 통과하지 못한 input에 대해 보고함(보고서를 띄움)
                // 위 코드가 보고하는 코드일지라도 함수를 멈출 수는 없다.
                return false;
                // 함수 자체가 리턴을 만나면 다음 코드를 읽지 않는다.
                // 유효성 검사가 실패하며 리턴한다. return만 써도 상관 없다.

            }

            const data = {
                id : form.id.value,
                pw : form.pw.value,
                name : form.name.value,
            }

            return data
        }

        // function ajaxGet() {
        //     const form = document.forms["register"];
        //     // console.dir(form);
        //     // console.dir(form.id);
        //     // console.dir(form.id.value);

        //     const data = getData()
            
        //     $.ajax({
        //         type: 'GET',
        //         url: '/ajax',
        //         // url: `/ajax?id=${data.id}&pw=${data.pw}&name=${data.name}`,
        //         data: data,
        //         success: function (result) {
        //             // console.log(result);
        //             const {
        //                 name
        //             } = result
        //             $("#result").html(`ajax get 요청 성공 ${name}님 환영합니다.`);
        //         }
        //     });
        // };

        // function ajaxPost() {
        //     const data = getData()
            
        //     $.ajax({
        //         type: 'POST',
        //         url: '/ajax',
        //         data: data,
        //         success: function (result) {
        //             console.log(result);
        //             $("#result").html(`ajax post 요청 성공 ${result.name}님 환영합니다.`);
        //         }
        //     });
        // };



        // function axiosGet() {
        //     const data = getData();
            
        //     axios({
        //         method: "GET",
        //         url: "/axios",
        //         params: data
        //     }).then((res)=> {
        //         // console.log("GET res:", res);
        //         // console.log("GET res.data:", res.data);
        //         const {
        //             name
        //         } = res.data

        //         $("#result").html(`axios get 요청 성공 ${name}님 환영합니다.`);
        //     });
        // };


        // function axiosPost() {
        //     const data = getData();

        //     axios({
        //         method: "POST",
        //         url: "/axios",
        //         data: data
        //     }).then((res) => {
        //         console.log("POST res:", res);
        //         console.log("POST res.data:", res.data.msg);
        //         const {
        //             name
        //         } = res.data
                
        //         $("#result").html(`axios post 요청 성공 ${name}님 환영합니다.`);
        //     });
        // };


        // Async/Await
        // async function axiosPost() {

        //     // const regex = /^[a-z0-9]{5,}$/
        //     // regex.test(form.id.value)

        //     const data = getData();
            
        //     if (!data) return;

        //     const res = await axios({
        //         method: "POST",
        //         url: "/axios",
        //         data: data,
        //     });

        //     console.log("res:", res)
        //     console.log("res.data:", res.data)
        //     $("#result").html(`axios post 요청 (Async/Await) 성공 ${res.data.name}님 환영합니다.`)
        // }
    


        async function fetchGet() {
        const data = getData();
        if (!data) return;

        // fetch(url, option 객체)
        // url -> action 
        // option 객체에 method가 있음.
        // fetch는 method 기본값 get
        // fetch는 get 요청 시 데이터를 query로 만들어서 url과 함께 전송
        // const urlQuery = `id=${data.id}&name=${data.naem}&pw=${data.pw}`

       const urlQuery = new URLSearchParams(data).toString();

        // --------------- 방법 1 (then 체이닝)--------------------
        // fetch(`/fetch?${urlQuery}`)
        //   .then((res) => {
        //     console.log("원본", res);
        //     // const data = res.json(); // error
        //     // console.log(data) // error
        //     return res.json()
        //   }).then((res) => {
        //     console.log("파싱", res);
        //     $("#result").html(`fetch get 요청 성공 ${res.name}님 환영합니다.`)
        //   });
        // };


        // --------------- 방법 2 (반만 async / await) --------------------
        
    //     fetch(`/fetch?${urlQuery}`).then(async (res) => {
    //         // console.log("원본", res);
    //         // console.log("파싱", await res.json());
    //         // console.log("파싱", await res.text());
    //         const data = await res.json();
    //         $("#result").html(`fetch get 요청 성공 ${data.name}님 환영합니다.`)
    //     });
    // };


        // --------------- 방법 3 (async / await)--------------------
        const oriRes = await fetch(`/fetch?${urlQuery}`)
        const res = await oriRes.json()
        console.log(res)
        $("#result").html(`fetch get 요청 성공 ${res.name}님 환영합니다.`)
      };

      function fetchPost() {
        const data = getData()
        if (!data) return;

        fetch("/fetch", {
          method: "POST",
          headers: {
            "Content-Type": "application/json"
          },
          body: JSON.stringify(data)
        }).then((res) => {
          return res.json()
        }).then((res) => {
          console.log(res)
          $("#result").html(`fetch post 요청 성공 ${res.name}님 환영합니다.`)
        });
      };
    </script>
</body>
</html>