<!DOCTYPE html>
<html lang="en">
<head>
    <meta charset="UTF-8">
    <meta name="viewport" content="width=device-width, initial-scale=1.0">
    <title>Document</title>
</head>
<body>
    <!-- <div>상품 1: 운동화</div>
    <div>상품 2: 후드집업</div> -->
    <!-- ejs 태그 안에 오는 자바스크립트 코드는 한줄로 끝나야 한다. 만약 한줄로 끝나지 않으면 나눠서 작성해야한다. -->
    <% for(let i = 0; i<5; i++) { %>
        <!-- ejs 태그 안에 바로 = 이 오면 = 뒤에 있는 변수나 값을 html로 노출 시킨다.-->
        <div>상품 <%=i %></div>  
    <% } %>
    <!-- 괄호 닫는 것과 ejs 태그로 감싸는 것을 꼭 잊지말자 -->

    <%="hello lily"%>
    <!-- 참고로 프론트 부분이 달라지는 것은 선택한 객체가 달라지는 것이 아니라서 node를 껐다가 킬 필요가 없다. -->
    <!-- ejs 태그 안에 바로 = 이 오면 = 뒤에 있는 변수나 값을 html로 노출 시킨다.-->
    <%="<div>안녕</div>"%>
    <!-- ejs 태그 안에 바로 - 이 오면 - 뒤에 있는 변수나 값을 html 문법을 적용시켜서 노출 시킨다.-->
    <%-"<div>안녕</div>"%>
    
    <!-- 현 위치에 있는 index.ejs 파일을 가져오는 include.-->
    <%-include("index.ejs")%>

    <!-- 문자열 처리를 안하면 변수라는 의미가 되므로, 서버측에서 보내준 변수를 이렇게 사용 가능하다. -->
    <!-- 서버측 코드도 수정했으므로 껐다 켜야 한다. -->
    <%=name%>

    <% for(let i = 0; i < product.length; i++) { %>
        <div>상품 <%=product[i] %></div>  
    <% } %>

    <!-- <script>
        []
        for ( let i = 0; i < [].length; i++) {
            const div = document
        }
    </script> -->
    <script>
        // console.log(product)
        // ejs 는 자바스크립트를 사용할 수 있다고 하지만 사실상 백엔드 부분이기 때문에,
        // 이런식으로 백엔드에서 넘겨준 변수(product)는 자바스크립트로 사용할 수 없고,
        // ejs 내에서만 사용할 수 있는 변수이다.
    </script>
</body>
</html>